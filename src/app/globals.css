
@import "tailwindcss";

:root {
  --radius: 0.5rem;
  /* Light mode colors */
  --background: 210 40% 98%;
  --foreground: 210 40% 8%;
  --card: 0 0% 100%;
  --card-foreground: 210 40% 8%;
  --popover: 0 0% 100%;
  --popover-foreground: 210 40% 8%;
  --primary: 280 60% 50%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96%;
  --secondary-foreground: 215 25% 27%;
  --muted: 210 40% 96%;
  --muted-foreground: 215 20% 65%;
  --accent: 210 40% 96%;
  --accent-foreground: 215 25% 27%;
  --destructive: 0 84% 60%;
  --border: 214 32% 91%;
  --input: 214 32% 91%;
  --ring: 320 60% 50%;
}

.dark {
  /* Enhanced dark mode colors with more vibrant primary */
  --background: 225 25% 12%;
  --foreground: 225 15% 95%;
  --card: 225 25% 16%;
  --card-foreground: 225 15% 95%;
  --popover: 225 25% 16%;
  --popover-foreground: 225 15% 95%;
  --primary: 260 100% 80%;
  --primary-foreground: 225 25% 12%;
  --secondary: 225 25% 20%;
  --secondary-foreground: 225 15% 95%;
  --muted: 225 25% 18%;
  --muted-foreground: 225 15% 70%;
  --accent: 225 25% 20%;
  --accent-foreground: 225 15% 95%;
  --destructive: 0 60% 60%;
  --border: 225 25% 25%;
  --input: 225 25% 20%;
  --ring: 260 100% 80%;
}

/* Base styles */
* {
  border-color: hsl(var(--border));
  outline-color: hsl(var(--ring) / 50%);
}

/* Force dark mode styles immediately */
html {
  color-scheme: dark;
}

html,
html body {
  background-color: hsl(225 25% 12%) !important;
  color: hsl(225 15% 95%) !important;
}

body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  font-feature-settings: "rlig" 1, "calt" 1;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Stellar background for both modes */
.stellar-bg {
  background: 
    radial-gradient(2px 2px at 20px 30px, hsl(var(--primary) / 0.6), transparent),
    radial-gradient(2px 2px at 40px 70px, hsl(var(--ring) / 0.5), transparent),
    radial-gradient(1px 1px at 90px 40px, hsl(var(--primary) / 0.7), transparent),
    radial-gradient(1px 1px at 130px 80px, hsl(var(--ring) / 0.4), transparent),
    radial-gradient(2px 2px at 160px 30px, hsl(var(--primary) / 0.5), transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: stellar-drift 20s ease-in-out infinite;
}

.dark .stellar-bg {
  background: 
    radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.8), transparent),
    radial-gradient(2px 2px at 40px 70px, hsl(var(--primary) / 0.6), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.6), transparent),
    radial-gradient(1px 1px at 130px 80px, hsl(var(--ring) / 0.4), transparent),
    radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.5), transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
}

@keyframes stellar-drift {
  0%, 100% { 
    background-position: 0 0, 40px 70px, 90px 40px, 130px 80px, 160px 30px;
  }
  50% { 
    background-position: 10px 5px, 50px 75px, 100px 45px, 140px 85px, 170px 35px;
  }
}

/* Gradient overlays */
.gradient-mesh {
  background: 
    linear-gradient(135deg, hsl(var(--primary) / 0.25) 0%, transparent 50%),
    linear-gradient(225deg, hsl(var(--ring) / 0.2) 0%, transparent 50%),
    linear-gradient(315deg, hsl(var(--primary) / 0.15) 0%, transparent 50%),
    radial-gradient(circle at 20% 50%, hsl(var(--primary) / 0.2) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, hsl(var(--ring) / 0.15) 0%, transparent 50%);
}

.dark .gradient-mesh {
  background: 
    linear-gradient(135deg, hsl(var(--primary) / 0.15) 0%, transparent 50%),
    linear-gradient(225deg, hsl(var(--ring) / 0.1) 0%, transparent 50%),
    linear-gradient(315deg, hsl(var(--primary) / 0.08) 0%, transparent 50%),
    radial-gradient(circle at 20% 50%, hsl(var(--primary) / 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, hsl(var(--ring) / 0.08) 0%, transparent 50%);
}

/* Enhanced glass morphism */
.glass-card {
  background: hsl(var(--card) / 0.9);
  backdrop-filter: blur(20px) saturate(1.8);
  border: 1px solid hsl(var(--border) / 0.5);
  box-shadow: 
    0 8px 32px hsl(var(--foreground) / 0.12),
    inset 0 1px 0 hsl(var(--foreground) / 0.15),
    0 0 0 1px hsl(var(--primary) / 0.05);
  transition: all 0.3s ease;
}

.dark .glass-card {
  background: hsl(var(--card) / 0.8);
  border: 1px solid hsl(var(--border) / 0.4);
  box-shadow: 
    0 8px 32px oklch(0 0 0 / 0.4),
    inset 0 1px 0 hsl(var(--foreground) / 0.15),
    0 0 0 1px hsl(var(--primary) / 0.1);
}

.glass-card:hover {
  transform: translateY(-4px);
  box-shadow: 
    0 16px 48px hsl(var(--foreground) / 0.15),
    inset 0 1px 0 hsl(var(--foreground) / 0.2),
    0 0 0 1px hsl(var(--primary) / 0.15);
}

/* Enhanced gradient text with better colors and stronger visibility */
.gradient-text {
  background: linear-gradient(135deg, 
    hsl(260 100% 82%), 
    hsl(280 100% 85%), 
    hsl(300 85% 75%),
    hsl(320 75% 78%),
    hsl(340 80% 80%)
  );
  background-size: 200% 200%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 4s ease-in-out infinite;
  font-weight: 800;
  text-shadow: 0 0 20px hsl(260 100% 80% / 0.3);
}

.dark .gradient-text {
  background: linear-gradient(135deg, 
    hsl(260 100% 85%), 
    hsl(280 100% 88%), 
    hsl(300 85% 80%),
    hsl(320 75% 82%),
    hsl(340 80% 85%)
  );
  background-size: 200% 200%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 4s ease-in-out infinite;
  font-weight: 800;
  text-shadow: 0 0 25px hsl(260 100% 85% / 0.4);
}

/* Textured background */
.textured-bg {
  background-image: 
    radial-gradient(circle at 25% 25%, hsl(var(--primary) / 0.1) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, hsl(var(--ring) / 0.1) 0%, transparent 50%),
    linear-gradient(135deg, transparent 0%, hsl(var(--primary) / 0.05) 50%, transparent 100%);
}

/* Noise texture overlay */
.noise-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    repeating-linear-gradient(
      45deg,
      transparent,
      transparent 2px,
      hsl(var(--foreground) / 0.02) 2px,
      hsl(var(--foreground) / 0.02) 4px
    );
  pointer-events: none;
}

/* Enhanced converter panel */
.converter-panel {
  background: hsl(var(--card));
  backdrop-filter: blur(20px);
  border: 1px solid hsl(var(--border) / 0.5);
  box-shadow: 
    0 20px 40px hsl(var(--background) / 0.5),
    0 0 0 1px hsl(var(--primary) / 0.1),
    inset 0 1px 0 hsl(var(--foreground) / 0.1);
}

/* Grid pattern background */
.grid-pattern {
  background-image: 
    linear-gradient(hsl(var(--border) / 0.1) 1px, transparent 1px),
    linear-gradient(90deg, hsl(var(--border) / 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
}

@keyframes gradient-shift {
  0%, 100% { 
    background-position: 0% 50%;
  }
  50% { 
    background-position: 100% 50%;
  }
}

/* Floating particles animation */
@keyframes float-particles {
  0%, 100% { 
    transform: translateY(0) rotate(0deg); 
    opacity: 0.5;
  }
  50% { 
    transform: translateY(-20px) rotate(180deg); 
    opacity: 1;
  }
}

.floating-particles {
  position: absolute;
  width: 6px;
  height: 6px;
  background: hsl(var(--primary) / 0.8);
  border-radius: 50%;
  animation: float-particles 6s ease-in-out infinite;
  box-shadow: 0 0 10px hsl(var(--primary) / 0.5);
}

.dark .floating-particles {
  background: hsl(var(--primary) / 0.9);
  box-shadow: 0 0 15px hsl(var(--primary) / 0.6);
}

.floating-particles:nth-child(2) { animation-delay: -2s; }
.floating-particles:nth-child(3) { animation-delay: -4s; }
.floating-particles:nth-child(4) { animation-delay: -1s; }
.floating-particles:nth-child(5) { animation-delay: -3s; }

/* Improved animations */
@keyframes pulse-glow {
  0%, 100% { 
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
  }
  50% { 
    box-shadow: 0 0 40px hsl(var(--primary) / 0.8);
  }
}

.pulse-glow {
  animation: pulse-glow 3s ease-in-out infinite;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--primary) / 0.6);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary));
}

/* Glass input and button styles */
.glass-input {
  background: hsl(var(--background) / 0.8);
  backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border) / 0.5);
  transition: all 0.3s ease;
}

.glass-input:focus {
  border-color: hsl(var(--primary) / 0.8);
  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.1);
}

.glass-button {
  background: hsl(var(--card) / 0.8);
  backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border) / 0.5);
  transition: all 0.3s ease;
}

.glass-button:hover {
  background: hsl(var(--card) / 0.9);
  border-color: hsl(var(--primary) / 0.5);
  transform: translateY(-1px);
}

/* Custom background patterns */
.bg-grid-pattern {
  background-image: 
    linear-gradient(to right, hsl(var(--border) / 0.2) 1px, transparent 1px),
    linear-gradient(to bottom, hsl(var(--border) / 0.2) 1px, transparent 1px);
  background-size: 60px 60px;
}

.bg-grid-small {
  background-image: 
    linear-gradient(to right, hsl(var(--border) / 0.15) 1px, transparent 1px),
    linear-gradient(to bottom, hsl(var(--border) / 0.15) 1px, transparent 1px);
  background-size: 20px 20px;
}

.dark .bg-grid-pattern {
  background-image: 
    linear-gradient(to right, hsl(var(--border) / 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, hsl(var(--border) / 0.1) 1px, transparent 1px);
}

.dark .bg-grid-small {
  background-image: 
    linear-gradient(to right, hsl(var(--border) / 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, hsl(var(--border) / 0.05) 1px, transparent 1px);
}

/* Enhanced animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

@keyframes pulse-soft {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

.animate-pulse-soft {
  animation: pulse-soft 3s ease-in-out infinite;
}
